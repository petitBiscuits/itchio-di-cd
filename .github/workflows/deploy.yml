name: Deploy Bevy Game to Itch.io

on:
  push:
    branches:
      - main  # Triggers normal game builds
  workflow_dispatch:  # Allows manual triggering (for prebuilding)
    inputs:
      force_prebuild:
        description: "Force prebuild of Bevy base image"
        required: false
        default: "false"

jobs:
  prebuild:
    name: 🏗 Prebuild Rust + Bevy Image (If Needed)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      packages: write  # Needed to push to GHCR

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4

      - name: 🔑 Log in to GitHub Container Registry (GHCR)
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: 🔍 Check if Prebuilt Image Exists
        id: check-image
        run: |
          IMAGE_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://ghcr.io/v2/${{ github.actor }}/bevy-wasm-base/tags/list)
          
          if [ "$IMAGE_EXISTS" == "200" ] && [ "${{ github.event.inputs.force_prebuild }}" != "true" ]; then
            echo "Prebuilt image already exists. Skipping build."
            echo "skip_build=true" >> $GITHUB_ENV
          else
            echo "Prebuilt image does not exist OR manually triggered."
            echo "skip_build=false" >> $GITHUB_ENV
          fi

      - name: 🛠 Build & Push Prebuilt Image (Only if Needed)
        if: env.skip_build != 'true'
        run: |
          IMAGE_NAME="ghcr.io/${{ github.actor }}/bevy-wasm-base"
          IMAGE_NAME_LOWER=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')  # Convert to lowercase

          docker build -t $IMAGE_NAME_LOWER -f docker/Dockerfile.prebuild .
          docker push $IMAGE_NAME_LOWER
  

  build:
    name: 🏗 Build Bevy Game in Docker
    runs-on: ubuntu-latest
    needs: prebuild  # Wait for prebuild if triggered
    permissions:
      packages: read  # Needed to pull from GHCR

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4

      - name: 🔑 Log in to GitHub Container Registry (GHCR)
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: 🐳 Pull Prebuilt Docker Image
        run: |
          # Convert repository name to lowercase
          IMAGE_NAME="ghcr.io/${{ github.actor }}/bevy-wasm-base"
          IMAGE_NAME_LOWER=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')
          
          # Pull the prebuilt image
          docker pull $IMAGE_NAME_LOWER

      - name: 🐳 Build the Game Using Prebuilt Image
        run: |
          docker build -t bevy-wasm-nginx -f docker/Dockerfile .

      - name: 📂 Extract WebAssembly Build Files from Docker
        run: |
          mkdir -p web_build
          docker create --name bevy-container bevy-wasm-nginx
          docker cp bevy-container:/usr/share/nginx/html/. web_build/
          docker rm bevy-container

      - name: 📤 Upload Artifact (For Debugging)
        uses: actions/upload-artifact@v4
        with:
          name: web_build
          path: web_build/

  deploy:
    name: 🚀 Deploy to Itch.io
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4

      - name: ⬇️ Download Built Files
        uses: actions/download-artifact@v4
        with:
          name: web_build
          path: web_build

      - name: 📦 Install Butler
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          FILE_SIZE=$(stat -c%s "butler.zip")
          if [ "$FILE_SIZE" -lt 1000 ]; then
            echo "❌ ERROR: Butler ZIP file is too small or corrupted!"
            exit 1
          fi
          unzip butler.zip -d /usr/local/bin/
          chmod +x /usr/local/bin/butler
          butler -V  # Verify installation

      - name: 🔑 Authenticate with Butler
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          echo "$BUTLER_API_KEY" | butler login

      - name: 🚀 Deploy to Itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          butler push web_build petitBiscuits/procedural_test_ci:web
